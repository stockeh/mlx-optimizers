<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="common_8py" kind="file" language="Python">
    <compoundname>common.py</compoundname>
    <innernamespace refid="namespacemlx__optimizers">mlx_optimizers</innernamespace>
    <innernamespace refid="namespacemlx__optimizers_1_1common">mlx_optimizers::common</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacemlx__optimizers_1_1common" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mlx.core<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mx</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">@mx.compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemlx__optimizers_1_1common_1a7b81da1b2c739b0423f787eb38d16ae9" kindref="member">newton_schulz</ref>(G,<sp/>steps=5,<sp/>eps=1e-7)<sp/>-&gt;<sp/>mx.array:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>G.ndim<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>a,<sp/>b,<sp/>c<sp/>=<sp/>(3.4445,<sp/>-4.7750,<sp/>2.0315)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>G.astype(mx.bfloat16)<sp/>/<sp/>(mx.linalg.norm(G)<sp/>+<sp/>eps)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>G.shape[0]<sp/>&gt;<sp/>G.shape[1]:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>X.T</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(steps):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>X<sp/>@<sp/>X.T</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>A<sp/>@<sp/>X</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>a<sp/>*<sp/>X<sp/>+<sp/>b<sp/>*<sp/>B<sp/>+<sp/>c<sp/>*<sp/>A<sp/>@<sp/>B</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>G.shape[0]<sp/>&gt;<sp/>G.shape[1]:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>X.T</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>X.astype(G.dtype)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemlx__optimizers_1_1common_1acf2107aaccfdbb43c72f2d95dc399f81" kindref="member">numel</ref>(x:<sp/>mx.array)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(mx.prod(mx.array(x.shape)))</highlight></codeline>
    </programlisting>
    <location file="mlx_optimizers/common.py"/>
  </compounddef>
</doxygen>
